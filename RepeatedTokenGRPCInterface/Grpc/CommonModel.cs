// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonModel.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SP.Service {

  /// <summary>Holder for reflection information generated from CommonModel.proto</summary>
  public static partial class CommonModelReflection {

    #region Descriptor
    /// <summary>File descriptor for CommonModel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonModelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFDb21tb25Nb2RlbC5wcm90bxIKU1AuU2VydmljZSINCgtWb2lkUmVxdWVz",
            "dCIlChBBY2NvdW50SWRSZXF1ZXN0EhEKCWFjY291bnRJZBgBIAEoCSInChFT",
            "dXBwbGllcklkUmVxdWVzdBISCgpzdXBwbGllcklkGAEgASgFIlIKCUF0dHJp",
            "YnV0ZRITCgthdHRyaWJ1dGVJZBgBIAEoAxIVCg1hdHRyaWJ1dGVOYW1lGAIg",
            "ASgJEhkKEXVzZUF0dHJpYnV0ZUltYWdlGAMgASgJIloKDkF0dHJpYnV0ZVZh",
            "bHVlEg8KB3ZhbHVlSWQYASABKAMSEwoLYXR0cmlidXRlSWQYAiABKAMSEAoI",
            "dmFsdWVTdHIYAyABKAkSEAoIaW1hZ2VVcmwYBCABKAkiuwIKB0FkZHJlc3MS",
            "CgoCSWQYASABKAUSEwoLY29udGFjdE5hbWUYAiABKAkSFgoOY29udGFjdEFk",
            "ZHJlc3MYAyABKAkSFQoNY29udGFjdE1vYmlsZRgEIAEoCRIOCgZnZW5kZXIY",
            "BSABKAUSDgoGc3RhdHVzGAYgASgFEhEKCWFjY291bnRJZBgHIAEoCRIQCghz",
            "Y2hvb2xJZBgIIAEoBRISCgpzY2hvb2xOYW1lGAkgASgJEhIKCmRpc3RyaWN0",
            "SWQYCiABKAUSFAoMZGlzdHJpY3ROYW1lGAsgASgJEhIKCmJ1aWxkaW5nSWQY",
            "DCABKAUSFAoMYnVpbGRpbmdOYW1lGA0gASgJEg4KBmRvcm1JZBgOIAEoBRIQ",
            "Cghkb3JtTmFtZRgPIAEoCRIRCglpc0RlZmF1bHQYECABKAUiggEKBFNob3AS",
            "DgoGc2hvcElkGAEgASgDEhAKCHNob3BOYW1lGAIgASgJEg8KB293bmVySWQY",
            "AyABKAkSEQoJb3duZXJOYW1lGAQgASgJEhEKCXN0YXJ0VGltZRgFIAEoCRIP",
            "CgdlbmRUaW1lGAYgASgJEhAKCHNob3BMb2dvGAcgASgJIscBCgxTaG9wcGlu",
            "Z0NhcnQSEQoJcHJvZHVjdElkGAEgASgJEhEKCWFjY291bnRJZBgCIAEoCRIQ",
            "CghxdWFudGl0eRgDIAEoBRIOCgZzaG9wSWQYBCABKAUSDgoGY2FydElkGAUg",
            "ASgJEhIKCmNyZWF0ZVRpbWUYBiABKAMSEwoLcHJvZHVjdE5hbWUYByABKAkS",
            "DgoGYW1vdW50GAggASgBEhEKCXVuaXRQcmljZRgJIAEoARITCgtzaGlwT3Jk",
            "ZXJJZBgKIAEoBSJWCgtBY2NvdW50SW5mbxIRCglhY2NvdW50SWQYAiABKAkS",
            "EwoLbW9iaWxlUGhvbmUYAyABKAkSDQoFZW1haWwYBCABKAkSEAoIdXNlck5h",
            "bWUYBSABKAkiWAoKUmVnaW9uRGF0YRIOCgZkYXRhSWQYASABKAUSEAoIZGF0",
            "YU5hbWUYAiABKAkSFAoMcGFyZW50RGF0YUlkGAMgASgFEhIKCnVwZGF0ZVRp",
            "bWUYBCABKANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SP.Service.VoidRequest), global::SP.Service.VoidRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SP.Service.AccountIdRequest), global::SP.Service.AccountIdRequest.Parser, new[]{ "AccountId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SP.Service.SupplierIdRequest), global::SP.Service.SupplierIdRequest.Parser, new[]{ "SupplierId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SP.Service.Attribute), global::SP.Service.Attribute.Parser, new[]{ "AttributeId", "AttributeName", "UseAttributeImage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SP.Service.AttributeValue), global::SP.Service.AttributeValue.Parser, new[]{ "ValueId", "AttributeId", "ValueStr", "ImageUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SP.Service.Address), global::SP.Service.Address.Parser, new[]{ "Id", "ContactName", "ContactAddress", "ContactMobile", "Gender", "Status", "AccountId", "SchoolId", "SchoolName", "DistrictId", "DistrictName", "BuildingId", "BuildingName", "DormId", "DormName", "IsDefault" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SP.Service.Shop), global::SP.Service.Shop.Parser, new[]{ "ShopId", "ShopName", "OwnerId", "OwnerName", "StartTime", "EndTime", "ShopLogo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SP.Service.ShoppingCart), global::SP.Service.ShoppingCart.Parser, new[]{ "ProductId", "AccountId", "Quantity", "ShopId", "CartId", "CreateTime", "ProductName", "Amount", "UnitPrice", "ShipOrderId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SP.Service.AccountInfo), global::SP.Service.AccountInfo.Parser, new[]{ "AccountId", "MobilePhone", "Email", "UserName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SP.Service.RegionData), global::SP.Service.RegionData.Parser, new[]{ "DataId", "DataName", "ParentDataId", "UpdateTime" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// 无参数的请求
  /// </summary>
  public sealed partial class VoidRequest : pb::IMessage<VoidRequest> {
    private static readonly pb::MessageParser<VoidRequest> _parser = new pb::MessageParser<VoidRequest>(() => new VoidRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoidRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SP.Service.CommonModelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidRequest(VoidRequest other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidRequest Clone() {
      return new VoidRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoidRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoidRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoidRequest other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  ///*
  /// 账户ID的请求参数
  /// </summary>
  public sealed partial class AccountIdRequest : pb::IMessage<AccountIdRequest> {
    private static readonly pb::MessageParser<AccountIdRequest> _parser = new pb::MessageParser<AccountIdRequest>(() => new AccountIdRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SP.Service.CommonModelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountIdRequest(AccountIdRequest other) : this() {
      accountId_ = other.accountId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountIdRequest Clone() {
      return new AccountIdRequest(this);
    }

    /// <summary>Field number for the "accountId" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private string accountId_ = "";
    /// <summary>
    ///*
    /// 账户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountId {
      get { return accountId_; }
      set {
        accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountId.Length != 0) {
        AccountId = other.AccountId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AccountId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// 供货商ID的请求参数
  /// </summary>
  public sealed partial class SupplierIdRequest : pb::IMessage<SupplierIdRequest> {
    private static readonly pb::MessageParser<SupplierIdRequest> _parser = new pb::MessageParser<SupplierIdRequest>(() => new SupplierIdRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SupplierIdRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SP.Service.CommonModelReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupplierIdRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupplierIdRequest(SupplierIdRequest other) : this() {
      supplierId_ = other.supplierId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupplierIdRequest Clone() {
      return new SupplierIdRequest(this);
    }

    /// <summary>Field number for the "supplierId" field.</summary>
    public const int SupplierIdFieldNumber = 1;
    private int supplierId_;
    /// <summary>
    ///*
    /// 供货商ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SupplierId {
      get { return supplierId_; }
      set {
        supplierId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SupplierIdRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SupplierIdRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SupplierId != other.SupplierId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SupplierId != 0) hash ^= SupplierId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SupplierId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SupplierId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SupplierId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SupplierId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SupplierIdRequest other) {
      if (other == null) {
        return;
      }
      if (other.SupplierId != 0) {
        SupplierId = other.SupplierId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SupplierId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// 商品类型属性的返回信息
  /// </summary>
  public sealed partial class Attribute : pb::IMessage<Attribute> {
    private static readonly pb::MessageParser<Attribute> _parser = new pb::MessageParser<Attribute>(() => new Attribute());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Attribute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SP.Service.CommonModelReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribute(Attribute other) : this() {
      attributeId_ = other.attributeId_;
      attributeName_ = other.attributeName_;
      useAttributeImage_ = other.useAttributeImage_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribute Clone() {
      return new Attribute(this);
    }

    /// <summary>Field number for the "attributeId" field.</summary>
    public const int AttributeIdFieldNumber = 1;
    private long attributeId_;
    /// <summary>
    ///*
    /// 商品属性ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AttributeId {
      get { return attributeId_; }
      set {
        attributeId_ = value;
      }
    }

    /// <summary>Field number for the "attributeName" field.</summary>
    public const int AttributeNameFieldNumber = 2;
    private string attributeName_ = "";
    /// <summary>
    ///*
    /// 商品属性名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttributeName {
      get { return attributeName_; }
      set {
        attributeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "useAttributeImage" field.</summary>
    public const int UseAttributeImageFieldNumber = 3;
    private string useAttributeImage_ = "";
    /// <summary>
    ///*
    /// 商品属性图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UseAttributeImage {
      get { return useAttributeImage_; }
      set {
        useAttributeImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Attribute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Attribute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AttributeId != other.AttributeId) return false;
      if (AttributeName != other.AttributeName) return false;
      if (UseAttributeImage != other.UseAttributeImage) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AttributeId != 0L) hash ^= AttributeId.GetHashCode();
      if (AttributeName.Length != 0) hash ^= AttributeName.GetHashCode();
      if (UseAttributeImage.Length != 0) hash ^= UseAttributeImage.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AttributeId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AttributeId);
      }
      if (AttributeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AttributeName);
      }
      if (UseAttributeImage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UseAttributeImage);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AttributeId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AttributeId);
      }
      if (AttributeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AttributeName);
      }
      if (UseAttributeImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UseAttributeImage);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Attribute other) {
      if (other == null) {
        return;
      }
      if (other.AttributeId != 0L) {
        AttributeId = other.AttributeId;
      }
      if (other.AttributeName.Length != 0) {
        AttributeName = other.AttributeName;
      }
      if (other.UseAttributeImage.Length != 0) {
        UseAttributeImage = other.UseAttributeImage;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            AttributeId = input.ReadInt64();
            break;
          }
          case 18: {
            AttributeName = input.ReadString();
            break;
          }
          case 26: {
            UseAttributeImage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// 商品类型属性值的返回信息
  /// </summary>
  public sealed partial class AttributeValue : pb::IMessage<AttributeValue> {
    private static readonly pb::MessageParser<AttributeValue> _parser = new pb::MessageParser<AttributeValue>(() => new AttributeValue());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttributeValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SP.Service.CommonModelReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeValue(AttributeValue other) : this() {
      valueId_ = other.valueId_;
      attributeId_ = other.attributeId_;
      valueStr_ = other.valueStr_;
      imageUrl_ = other.imageUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttributeValue Clone() {
      return new AttributeValue(this);
    }

    /// <summary>Field number for the "valueId" field.</summary>
    public const int ValueIdFieldNumber = 1;
    private long valueId_;
    /// <summary>
    ///*
    /// 商品类型ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ValueId {
      get { return valueId_; }
      set {
        valueId_ = value;
      }
    }

    /// <summary>Field number for the "attributeId" field.</summary>
    public const int AttributeIdFieldNumber = 2;
    private long attributeId_;
    /// <summary>
    ///*
    /// 商品类型属性值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AttributeId {
      get { return attributeId_; }
      set {
        attributeId_ = value;
      }
    }

    /// <summary>Field number for the "valueStr" field.</summary>
    public const int ValueStrFieldNumber = 3;
    private string valueStr_ = "";
    /// <summary>
    ///*
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueStr {
      get { return valueStr_; }
      set {
        valueStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "imageUrl" field.</summary>
    public const int ImageUrlFieldNumber = 4;
    private string imageUrl_ = "";
    /// <summary>
    ///*
    /// 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUrl {
      get { return imageUrl_; }
      set {
        imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttributeValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttributeValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ValueId != other.ValueId) return false;
      if (AttributeId != other.AttributeId) return false;
      if (ValueStr != other.ValueStr) return false;
      if (ImageUrl != other.ImageUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ValueId != 0L) hash ^= ValueId.GetHashCode();
      if (AttributeId != 0L) hash ^= AttributeId.GetHashCode();
      if (ValueStr.Length != 0) hash ^= ValueStr.GetHashCode();
      if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ValueId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ValueId);
      }
      if (AttributeId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(AttributeId);
      }
      if (ValueStr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ValueStr);
      }
      if (ImageUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ImageUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ValueId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ValueId);
      }
      if (AttributeId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AttributeId);
      }
      if (ValueStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueStr);
      }
      if (ImageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttributeValue other) {
      if (other == null) {
        return;
      }
      if (other.ValueId != 0L) {
        ValueId = other.ValueId;
      }
      if (other.AttributeId != 0L) {
        AttributeId = other.AttributeId;
      }
      if (other.ValueStr.Length != 0) {
        ValueStr = other.ValueStr;
      }
      if (other.ImageUrl.Length != 0) {
        ImageUrl = other.ImageUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ValueId = input.ReadInt64();
            break;
          }
          case 16: {
            AttributeId = input.ReadInt64();
            break;
          }
          case 26: {
            ValueStr = input.ReadString();
            break;
          }
          case 34: {
            ImageUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// 用户地址的返回信息
  /// </summary>
  public sealed partial class Address : pb::IMessage<Address> {
    private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Address> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SP.Service.CommonModelReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address(Address other) : this() {
      id_ = other.id_;
      contactName_ = other.contactName_;
      contactAddress_ = other.contactAddress_;
      contactMobile_ = other.contactMobile_;
      gender_ = other.gender_;
      status_ = other.status_;
      accountId_ = other.accountId_;
      schoolId_ = other.schoolId_;
      schoolName_ = other.schoolName_;
      districtId_ = other.districtId_;
      districtName_ = other.districtName_;
      buildingId_ = other.buildingId_;
      buildingName_ = other.buildingName_;
      dormId_ = other.dormId_;
      dormName_ = other.dormName_;
      isDefault_ = other.isDefault_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address Clone() {
      return new Address(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///*
    /// 用户地址ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "contactName" field.</summary>
    public const int ContactNameFieldNumber = 2;
    private string contactName_ = "";
    /// <summary>
    ///*
    /// 联系人名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContactName {
      get { return contactName_; }
      set {
        contactName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contactAddress" field.</summary>
    public const int ContactAddressFieldNumber = 3;
    private string contactAddress_ = "";
    /// <summary>
    ///*
    /// 地址名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContactAddress {
      get { return contactAddress_; }
      set {
        contactAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contactMobile" field.</summary>
    public const int ContactMobileFieldNumber = 4;
    private string contactMobile_ = "";
    /// <summary>
    ///*
    /// 联系人电话
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContactMobile {
      get { return contactMobile_; }
      set {
        contactMobile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 5;
    private int gender_;
    /// <summary>
    ///*
    /// 联系人性别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private int status_;
    /// <summary>
    ///*
    /// 用户地址状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "accountId" field.</summary>
    public const int AccountIdFieldNumber = 7;
    private string accountId_ = "";
    /// <summary>
    ///*
    ///  AccountId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountId {
      get { return accountId_; }
      set {
        accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schoolId" field.</summary>
    public const int SchoolIdFieldNumber = 8;
    private int schoolId_;
    /// <summary>
    ///*
    ///  学校ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SchoolId {
      get { return schoolId_; }
      set {
        schoolId_ = value;
      }
    }

    /// <summary>Field number for the "schoolName" field.</summary>
    public const int SchoolNameFieldNumber = 9;
    private string schoolName_ = "";
    /// <summary>
    ///*
    ///  学校名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SchoolName {
      get { return schoolName_; }
      set {
        schoolName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "districtId" field.</summary>
    public const int DistrictIdFieldNumber = 10;
    private int districtId_;
    /// <summary>
    ///*
    ///  学校ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DistrictId {
      get { return districtId_; }
      set {
        districtId_ = value;
      }
    }

    /// <summary>Field number for the "districtName" field.</summary>
    public const int DistrictNameFieldNumber = 11;
    private string districtName_ = "";
    /// <summary>
    ///*
    ///  学校名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DistrictName {
      get { return districtName_; }
      set {
        districtName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "buildingId" field.</summary>
    public const int BuildingIdFieldNumber = 12;
    private int buildingId_;
    /// <summary>
    ///*
    ///  楼栋ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildingId {
      get { return buildingId_; }
      set {
        buildingId_ = value;
      }
    }

    /// <summary>Field number for the "buildingName" field.</summary>
    public const int BuildingNameFieldNumber = 13;
    private string buildingName_ = "";
    /// <summary>
    ///*
    ///  楼栋名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildingName {
      get { return buildingName_; }
      set {
        buildingName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dormId" field.</summary>
    public const int DormIdFieldNumber = 14;
    private int dormId_;
    /// <summary>
    ///*
    ///  宿舍ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DormId {
      get { return dormId_; }
      set {
        dormId_ = value;
      }
    }

    /// <summary>Field number for the "dormName" field.</summary>
    public const int DormNameFieldNumber = 15;
    private string dormName_ = "";
    /// <summary>
    ///*
    ///  宿舍号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DormName {
      get { return dormName_; }
      set {
        dormName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isDefault" field.</summary>
    public const int IsDefaultFieldNumber = 16;
    private int isDefault_;
    /// <summary>
    ///*
    /// 联系人性别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IsDefault {
      get { return isDefault_; }
      set {
        isDefault_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Address);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Address other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ContactName != other.ContactName) return false;
      if (ContactAddress != other.ContactAddress) return false;
      if (ContactMobile != other.ContactMobile) return false;
      if (Gender != other.Gender) return false;
      if (Status != other.Status) return false;
      if (AccountId != other.AccountId) return false;
      if (SchoolId != other.SchoolId) return false;
      if (SchoolName != other.SchoolName) return false;
      if (DistrictId != other.DistrictId) return false;
      if (DistrictName != other.DistrictName) return false;
      if (BuildingId != other.BuildingId) return false;
      if (BuildingName != other.BuildingName) return false;
      if (DormId != other.DormId) return false;
      if (DormName != other.DormName) return false;
      if (IsDefault != other.IsDefault) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ContactName.Length != 0) hash ^= ContactName.GetHashCode();
      if (ContactAddress.Length != 0) hash ^= ContactAddress.GetHashCode();
      if (ContactMobile.Length != 0) hash ^= ContactMobile.GetHashCode();
      if (Gender != 0) hash ^= Gender.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
      if (SchoolId != 0) hash ^= SchoolId.GetHashCode();
      if (SchoolName.Length != 0) hash ^= SchoolName.GetHashCode();
      if (DistrictId != 0) hash ^= DistrictId.GetHashCode();
      if (DistrictName.Length != 0) hash ^= DistrictName.GetHashCode();
      if (BuildingId != 0) hash ^= BuildingId.GetHashCode();
      if (BuildingName.Length != 0) hash ^= BuildingName.GetHashCode();
      if (DormId != 0) hash ^= DormId.GetHashCode();
      if (DormName.Length != 0) hash ^= DormName.GetHashCode();
      if (IsDefault != 0) hash ^= IsDefault.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ContactName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ContactName);
      }
      if (ContactAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ContactAddress);
      }
      if (ContactMobile.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ContactMobile);
      }
      if (Gender != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Gender);
      }
      if (Status != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Status);
      }
      if (AccountId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AccountId);
      }
      if (SchoolId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SchoolId);
      }
      if (SchoolName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SchoolName);
      }
      if (DistrictId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(DistrictId);
      }
      if (DistrictName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DistrictName);
      }
      if (BuildingId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BuildingId);
      }
      if (BuildingName.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(BuildingName);
      }
      if (DormId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(DormId);
      }
      if (DormName.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(DormName);
      }
      if (IsDefault != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(IsDefault);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ContactName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContactName);
      }
      if (ContactAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContactAddress);
      }
      if (ContactMobile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContactMobile);
      }
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (AccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
      }
      if (SchoolId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SchoolId);
      }
      if (SchoolName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SchoolName);
      }
      if (DistrictId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DistrictId);
      }
      if (DistrictName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DistrictName);
      }
      if (BuildingId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildingId);
      }
      if (BuildingName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildingName);
      }
      if (DormId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DormId);
      }
      if (DormName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DormName);
      }
      if (IsDefault != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(IsDefault);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Address other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ContactName.Length != 0) {
        ContactName = other.ContactName;
      }
      if (other.ContactAddress.Length != 0) {
        ContactAddress = other.ContactAddress;
      }
      if (other.ContactMobile.Length != 0) {
        ContactMobile = other.ContactMobile;
      }
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.AccountId.Length != 0) {
        AccountId = other.AccountId;
      }
      if (other.SchoolId != 0) {
        SchoolId = other.SchoolId;
      }
      if (other.SchoolName.Length != 0) {
        SchoolName = other.SchoolName;
      }
      if (other.DistrictId != 0) {
        DistrictId = other.DistrictId;
      }
      if (other.DistrictName.Length != 0) {
        DistrictName = other.DistrictName;
      }
      if (other.BuildingId != 0) {
        BuildingId = other.BuildingId;
      }
      if (other.BuildingName.Length != 0) {
        BuildingName = other.BuildingName;
      }
      if (other.DormId != 0) {
        DormId = other.DormId;
      }
      if (other.DormName.Length != 0) {
        DormName = other.DormName;
      }
      if (other.IsDefault != 0) {
        IsDefault = other.IsDefault;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            ContactName = input.ReadString();
            break;
          }
          case 26: {
            ContactAddress = input.ReadString();
            break;
          }
          case 34: {
            ContactMobile = input.ReadString();
            break;
          }
          case 40: {
            Gender = input.ReadInt32();
            break;
          }
          case 48: {
            Status = input.ReadInt32();
            break;
          }
          case 58: {
            AccountId = input.ReadString();
            break;
          }
          case 64: {
            SchoolId = input.ReadInt32();
            break;
          }
          case 74: {
            SchoolName = input.ReadString();
            break;
          }
          case 80: {
            DistrictId = input.ReadInt32();
            break;
          }
          case 90: {
            DistrictName = input.ReadString();
            break;
          }
          case 96: {
            BuildingId = input.ReadInt32();
            break;
          }
          case 106: {
            BuildingName = input.ReadString();
            break;
          }
          case 112: {
            DormId = input.ReadInt32();
            break;
          }
          case 122: {
            DormName = input.ReadString();
            break;
          }
          case 128: {
            IsDefault = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// 店铺的信息
  /// </summary>
  public sealed partial class Shop : pb::IMessage<Shop> {
    private static readonly pb::MessageParser<Shop> _parser = new pb::MessageParser<Shop>(() => new Shop());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Shop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SP.Service.CommonModelReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Shop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Shop(Shop other) : this() {
      shopId_ = other.shopId_;
      shopName_ = other.shopName_;
      ownerId_ = other.ownerId_;
      ownerName_ = other.ownerName_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      shopLogo_ = other.shopLogo_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Shop Clone() {
      return new Shop(this);
    }

    /// <summary>Field number for the "shopId" field.</summary>
    public const int ShopIdFieldNumber = 1;
    private long shopId_;
    /// <summary>
    ///*
    /// 店铺ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ShopId {
      get { return shopId_; }
      set {
        shopId_ = value;
      }
    }

    /// <summary>Field number for the "shopName" field.</summary>
    public const int ShopNameFieldNumber = 2;
    private string shopName_ = "";
    /// <summary>
    ///*
    /// 店铺名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShopName {
      get { return shopName_; }
      set {
        shopName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerId" field.</summary>
    public const int OwnerIdFieldNumber = 3;
    private string ownerId_ = "";
    /// <summary>
    ///*
    /// 店铺拥有者ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerName" field.</summary>
    public const int OwnerNameFieldNumber = 4;
    private string ownerName_ = "";
    /// <summary>
    ///*
    /// 店铺拥有者名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerName {
      get { return ownerName_; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 5;
    private string startTime_ = "";
    /// <summary>
    ///*
    /// 店铺营业开始时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endTime" field.</summary>
    public const int EndTimeFieldNumber = 6;
    private string endTime_ = "";
    /// <summary>
    ///*
    /// 店铺营业结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shopLogo" field.</summary>
    public const int ShopLogoFieldNumber = 7;
    private string shopLogo_ = "";
    /// <summary>
    ///*
    /// 店铺logo
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShopLogo {
      get { return shopLogo_; }
      set {
        shopLogo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Shop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Shop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShopId != other.ShopId) return false;
      if (ShopName != other.ShopName) return false;
      if (OwnerId != other.OwnerId) return false;
      if (OwnerName != other.OwnerName) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (ShopLogo != other.ShopLogo) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShopId != 0L) hash ^= ShopId.GetHashCode();
      if (ShopName.Length != 0) hash ^= ShopName.GetHashCode();
      if (OwnerId.Length != 0) hash ^= OwnerId.GetHashCode();
      if (OwnerName.Length != 0) hash ^= OwnerName.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (ShopLogo.Length != 0) hash ^= ShopLogo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShopId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ShopId);
      }
      if (ShopName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ShopName);
      }
      if (OwnerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OwnerId);
      }
      if (OwnerName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OwnerName);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(EndTime);
      }
      if (ShopLogo.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ShopLogo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShopId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShopId);
      }
      if (ShopName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShopName);
      }
      if (OwnerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerId);
      }
      if (OwnerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (ShopLogo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShopLogo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Shop other) {
      if (other == null) {
        return;
      }
      if (other.ShopId != 0L) {
        ShopId = other.ShopId;
      }
      if (other.ShopName.Length != 0) {
        ShopName = other.ShopName;
      }
      if (other.OwnerId.Length != 0) {
        OwnerId = other.OwnerId;
      }
      if (other.OwnerName.Length != 0) {
        OwnerName = other.OwnerName;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      if (other.ShopLogo.Length != 0) {
        ShopLogo = other.ShopLogo;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ShopId = input.ReadInt64();
            break;
          }
          case 18: {
            ShopName = input.ReadString();
            break;
          }
          case 26: {
            OwnerId = input.ReadString();
            break;
          }
          case 34: {
            OwnerName = input.ReadString();
            break;
          }
          case 42: {
            StartTime = input.ReadString();
            break;
          }
          case 50: {
            EndTime = input.ReadString();
            break;
          }
          case 58: {
            ShopLogo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// 购物车
  /// </summary>
  public sealed partial class ShoppingCart : pb::IMessage<ShoppingCart> {
    private static readonly pb::MessageParser<ShoppingCart> _parser = new pb::MessageParser<ShoppingCart>(() => new ShoppingCart());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShoppingCart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SP.Service.CommonModelReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShoppingCart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShoppingCart(ShoppingCart other) : this() {
      productId_ = other.productId_;
      accountId_ = other.accountId_;
      quantity_ = other.quantity_;
      shopId_ = other.shopId_;
      cartId_ = other.cartId_;
      createTime_ = other.createTime_;
      productName_ = other.productName_;
      amount_ = other.amount_;
      unitPrice_ = other.unitPrice_;
      shipOrderId_ = other.shipOrderId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShoppingCart Clone() {
      return new ShoppingCart(this);
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private string productId_ = "";
    /// <summary>
    ///*
    ///  产品ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductId {
      get { return productId_; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accountId" field.</summary>
    public const int AccountIdFieldNumber = 2;
    private string accountId_ = "";
    /// <summary>
    ///*
    ///  账户ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountId {
      get { return accountId_; }
      set {
        accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 3;
    private int quantity_;
    /// <summary>
    ///*
    ///  购买数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "shopId" field.</summary>
    public const int ShopIdFieldNumber = 4;
    private int shopId_;
    /// <summary>
    ///*
    ///  店铺ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShopId {
      get { return shopId_; }
      set {
        shopId_ = value;
      }
    }

    /// <summary>Field number for the "cartId" field.</summary>
    public const int CartIdFieldNumber = 5;
    private string cartId_ = "";
    /// <summary>
    ///*
    ///  购物车ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CartId {
      get { return cartId_; }
      set {
        cartId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private long createTime_;
    /// <summary>
    ///*
    ///  创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "productName" field.</summary>
    public const int ProductNameFieldNumber = 7;
    private string productName_ = "";
    /// <summary>
    ///*
    ///  产品名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductName {
      get { return productName_; }
      set {
        productName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 8;
    private double amount_;
    /// <summary>
    ///*
    ///  总价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "unitPrice" field.</summary>
    public const int UnitPriceFieldNumber = 9;
    private double unitPrice_;
    /// <summary>
    ///*
    ///  单价
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double UnitPrice {
      get { return unitPrice_; }
      set {
        unitPrice_ = value;
      }
    }

    /// <summary>Field number for the "shipOrderId" field.</summary>
    public const int ShipOrderIdFieldNumber = 10;
    private int shipOrderId_;
    /// <summary>
    ///*
    /// 配送订单ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShipOrderId {
      get { return shipOrderId_; }
      set {
        shipOrderId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShoppingCart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShoppingCart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (AccountId != other.AccountId) return false;
      if (Quantity != other.Quantity) return false;
      if (ShopId != other.ShopId) return false;
      if (CartId != other.CartId) return false;
      if (CreateTime != other.CreateTime) return false;
      if (ProductName != other.ProductName) return false;
      if (Amount != other.Amount) return false;
      if (UnitPrice != other.UnitPrice) return false;
      if (ShipOrderId != other.ShipOrderId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
      if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (ShopId != 0) hash ^= ShopId.GetHashCode();
      if (CartId.Length != 0) hash ^= CartId.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (ProductName.Length != 0) hash ^= ProductName.GetHashCode();
      if (Amount != 0D) hash ^= Amount.GetHashCode();
      if (UnitPrice != 0D) hash ^= UnitPrice.GetHashCode();
      if (ShipOrderId != 0) hash ^= ShipOrderId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProductId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProductId);
      }
      if (AccountId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccountId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Quantity);
      }
      if (ShopId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ShopId);
      }
      if (CartId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CartId);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CreateTime);
      }
      if (ProductName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ProductName);
      }
      if (Amount != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Amount);
      }
      if (UnitPrice != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(UnitPrice);
      }
      if (ShipOrderId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ShipOrderId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (AccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (ShopId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShopId);
      }
      if (CartId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CartId);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (ProductName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductName);
      }
      if (Amount != 0D) {
        size += 1 + 8;
      }
      if (UnitPrice != 0D) {
        size += 1 + 8;
      }
      if (ShipOrderId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShipOrderId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShoppingCart other) {
      if (other == null) {
        return;
      }
      if (other.ProductId.Length != 0) {
        ProductId = other.ProductId;
      }
      if (other.AccountId.Length != 0) {
        AccountId = other.AccountId;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.ShopId != 0) {
        ShopId = other.ShopId;
      }
      if (other.CartId.Length != 0) {
        CartId = other.CartId;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.ProductName.Length != 0) {
        ProductName = other.ProductName;
      }
      if (other.Amount != 0D) {
        Amount = other.Amount;
      }
      if (other.UnitPrice != 0D) {
        UnitPrice = other.UnitPrice;
      }
      if (other.ShipOrderId != 0) {
        ShipOrderId = other.ShipOrderId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ProductId = input.ReadString();
            break;
          }
          case 18: {
            AccountId = input.ReadString();
            break;
          }
          case 24: {
            Quantity = input.ReadInt32();
            break;
          }
          case 32: {
            ShopId = input.ReadInt32();
            break;
          }
          case 42: {
            CartId = input.ReadString();
            break;
          }
          case 48: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 58: {
            ProductName = input.ReadString();
            break;
          }
          case 65: {
            Amount = input.ReadDouble();
            break;
          }
          case 73: {
            UnitPrice = input.ReadDouble();
            break;
          }
          case 80: {
            ShipOrderId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// 用户详情的返回信息
  /// </summary>
  public sealed partial class AccountInfo : pb::IMessage<AccountInfo> {
    private static readonly pb::MessageParser<AccountInfo> _parser = new pb::MessageParser<AccountInfo>(() => new AccountInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SP.Service.CommonModelReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfo(AccountInfo other) : this() {
      accountId_ = other.accountId_;
      mobilePhone_ = other.mobilePhone_;
      email_ = other.email_;
      userName_ = other.userName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfo Clone() {
      return new AccountInfo(this);
    }

    /// <summary>Field number for the "accountId" field.</summary>
    public const int AccountIdFieldNumber = 2;
    private string accountId_ = "";
    /// <summary>
    ///*
    /// AccountId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountId {
      get { return accountId_; }
      set {
        accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mobilePhone" field.</summary>
    public const int MobilePhoneFieldNumber = 3;
    private string mobilePhone_ = "";
    /// <summary>
    ///*
    /// 账户手机
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MobilePhone {
      get { return mobilePhone_; }
      set {
        mobilePhone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 4;
    private string email_ = "";
    /// <summary>
    ///*
    /// 账户邮件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 5;
    private string userName_ = "";
    /// <summary>
    ///*
    /// 账户名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (MobilePhone != other.MobilePhone) return false;
      if (Email != other.Email) return false;
      if (UserName != other.UserName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
      if (MobilePhone.Length != 0) hash ^= MobilePhone.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccountId);
      }
      if (MobilePhone.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MobilePhone);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Email);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UserName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountId);
      }
      if (MobilePhone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MobilePhone);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountInfo other) {
      if (other == null) {
        return;
      }
      if (other.AccountId.Length != 0) {
        AccountId = other.AccountId;
      }
      if (other.MobilePhone.Length != 0) {
        MobilePhone = other.MobilePhone;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            AccountId = input.ReadString();
            break;
          }
          case 26: {
            MobilePhone = input.ReadString();
            break;
          }
          case 34: {
            Email = input.ReadString();
            break;
          }
          case 42: {
            UserName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// 区域的返回信息
  /// </summary>
  public sealed partial class RegionData : pb::IMessage<RegionData> {
    private static readonly pb::MessageParser<RegionData> _parser = new pb::MessageParser<RegionData>(() => new RegionData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegionData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SP.Service.CommonModelReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegionData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegionData(RegionData other) : this() {
      dataId_ = other.dataId_;
      dataName_ = other.dataName_;
      parentDataId_ = other.parentDataId_;
      updateTime_ = other.updateTime_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegionData Clone() {
      return new RegionData(this);
    }

    /// <summary>Field number for the "dataId" field.</summary>
    public const int DataIdFieldNumber = 1;
    private int dataId_;
    /// <summary>
    ///*
    ///  区域ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DataId {
      get { return dataId_; }
      set {
        dataId_ = value;
      }
    }

    /// <summary>Field number for the "dataName" field.</summary>
    public const int DataNameFieldNumber = 2;
    private string dataName_ = "";
    /// <summary>
    ///*
    ///  区域名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DataName {
      get { return dataName_; }
      set {
        dataName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parentDataId" field.</summary>
    public const int ParentDataIdFieldNumber = 3;
    private int parentDataId_;
    /// <summary>
    ///*
    ///  区域父ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ParentDataId {
      get { return parentDataId_; }
      set {
        parentDataId_ = value;
      }
    }

    /// <summary>Field number for the "updateTime" field.</summary>
    public const int UpdateTimeFieldNumber = 4;
    private long updateTime_;
    /// <summary>
    ///*
    ///  更新时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegionData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegionData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataId != other.DataId) return false;
      if (DataName != other.DataName) return false;
      if (ParentDataId != other.ParentDataId) return false;
      if (UpdateTime != other.UpdateTime) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataId != 0) hash ^= DataId.GetHashCode();
      if (DataName.Length != 0) hash ^= DataName.GetHashCode();
      if (ParentDataId != 0) hash ^= ParentDataId.GetHashCode();
      if (UpdateTime != 0L) hash ^= UpdateTime.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DataId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DataId);
      }
      if (DataName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DataName);
      }
      if (ParentDataId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ParentDataId);
      }
      if (UpdateTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(UpdateTime);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DataId);
      }
      if (DataName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataName);
      }
      if (ParentDataId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ParentDataId);
      }
      if (UpdateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdateTime);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegionData other) {
      if (other == null) {
        return;
      }
      if (other.DataId != 0) {
        DataId = other.DataId;
      }
      if (other.DataName.Length != 0) {
        DataName = other.DataName;
      }
      if (other.ParentDataId != 0) {
        ParentDataId = other.ParentDataId;
      }
      if (other.UpdateTime != 0L) {
        UpdateTime = other.UpdateTime;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            DataId = input.ReadInt32();
            break;
          }
          case 18: {
            DataName = input.ReadString();
            break;
          }
          case 24: {
            ParentDataId = input.ReadInt32();
            break;
          }
          case 32: {
            UpdateTime = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
